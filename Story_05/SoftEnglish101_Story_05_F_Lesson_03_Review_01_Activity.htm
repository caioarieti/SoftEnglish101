

<?xml version="1.0"?>
       <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "xhtml11.dtd">
       <html xmlns="http://www.w3.org/1999/xhtml"
             xml:lang="en"><head><meta name="author" content="Created with TexToys Rhubarb by Martin Holmes, registered to Unregistered."/><meta name="keywords" content="TexToys Rhubarb, TexToys, Martin Holmes, Windows, Creative Technology"/>

<link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" />
<meta name="DC:Creator" content="Unregistered" />
<meta name="DC:Title" content="Digite o que vocÃª escutar. OuÃ§a quantas vezes forem necessÃ¡rias." />

						 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> 

<title>Digite o que voc&#x00EA; escutar. Ou&#x00E7;a quantas vezes forem necess&#x00E1;rias.</title>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Insert Audio Example</title>
    <style>
        .audio-container {
            text-align: center;
        }
    </style>
</head>
<body>
        
    <div class="audio-container">
        <audio controls>
            <source src="SoftEnglish101_Lesson05_F2_audio.mp3" type="audio/mpeg">
            Your browser does not support the audio element.
        </audio>
    </div>
    
    </body>
</html>

<!-- Made with executable version TexToys: Rhubarb Version 3.1 Release 0 Build 9 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->

<style type="text/css">



/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */





/* Made with executable version TexToys: Rhubarb Version 3.1 Release 0 Build 9 */

body{
	font-family: Geneva,Arial,sans-serif;
	background-color: #ffffff;
	color: #000000;
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: larger;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 100%;
}

div,span,td{
	font-size: 100%;
	color: #000000;
}

div.Titles{
	padding: 0.5em;
	text-align: center;
	color: #000000;
}

button{
	font-family: Geneva,Arial,sans-serif;
	font-size: 100%;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: #000000;
}

.ExerciseSubtitle{
	font-size: 120%;
	color: #000000;
}

div.StdDiv{
	background-color: #dddddd;
	text-align: center;
	font-size: 100%;
	color: #000000;
	padding: 8px;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: #000000;
	margin-bottom: 1px;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: #000000;
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: #000000;
}

span.Instructions{

}

div.Story{


	text-align: left;

	color: #000000;
	font-family: Geneva,Arial,sans-serif;
	background-color: #ffffff;
	margin-left: 5%;
	margin-right: 5%;
	margin-bottom: 1.0em;
	padding: 0.5em;
	border-width: 1px;
	border-style: solid;
	border-color: #000000;
}



/* Begin Rhubarb-specific css */



/* End Rhubarb-specific css */

/* Begin Sequitur-specific css */

span.Choice{
	color: #000000;
}

table.ExerciseTable{
	margin-left: auto;
	margin-right: auto;
	margin-bottom: 2.0em;
}

button#ShowWholeText{
	display: none;
}

/* End Sequitur-specific css */


.FuncButton {
	text-align: center;
	border-style: solid;

	border-left-color: #eeeeee;
	border-top-color: #eeeeee;
	border-right-color: #6e6e6e;
	border-bottom-color: #6e6e6e;
	color: #000000;
	background-color: #dddddd;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonUp {
	color: #dddddd;
	text-align: center;
	border-style: solid;

	border-left-color: #eeeeee;
	border-top-color: #eeeeee;
	border-right-color: #6e6e6e;
	border-bottom-color: #6e6e6e;

	background-color: #000000;
	color: #dddddd;
	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

.FuncButtonDown {
	color: #dddddd;
	text-align: center;
	border-style: solid;

	border-left-color: #6e6e6e;
	border-top-color: #6e6e6e;
	border-right-color: #eeeeee;
	border-bottom-color: #eeeeee;
	background-color: #000000;
	color: #dddddd;

	border-width: 2px;
	padding: 3px 6px 3px 6px;
	cursor: pointer;
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: #999999;
	text-align: center;
	margin: 2px 0px 2px 0px;
	clear: both;
	font-size: 100%;
}

.NavButton {
	border-style: solid;
	
	border-left-color: #cccccc;
	border-top-color: #cccccc;
	border-right-color: #4c4c4c;
	border-bottom-color: #4c4c4c;
	background-color: #999999;
	color: #000000;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonUp {
	border-style: solid;

	border-left-color: #cccccc;
	border-top-color: #cccccc;
	border-right-color: #4c4c4c;
	border-bottom-color: #4c4c4c;
	color: #999999;
	background-color: #000000;

	border-width: 2px;
	cursor: pointer;	
}

.NavButtonDown {
	border-style: solid;

	border-left-color: #4c4c4c;
	border-top-color: #4c4c4c;
	border-right-color: #cccccc;
	border-bottom-color: #cccccc;
	color: #999999;
	background-color: #000000;

	border-width: 2px;
	cursor: pointer;	
}

/*EndNavBarStyle*/

a{
	color: #0000cc;
}

a:visited{
	color: #0000ff;
}

a:hover{
	color: #0000cc;
}

/* Elements added from hp6.cs_ */

.FeedbackText{
	color: #000000;
}

div.Feedback {
	background-color: #ffffff;
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: #000000;
	position: absolute;
	display: none;
	font-size: 100%;
}


</style>

<script type="text/javascript">

//<![CDATA[

<!--


function Client(){
//if not a DOM browser, hopeless
	this.min = false; if (document.getElementById){this.min = true;};

	this.ua = navigator.userAgent;
	this.name = navigator.appName;
	this.ver = navigator.appVersion;  

//Get data about the browser
	this.mac = (this.ver.indexOf('Mac') != -1);
	this.win = (this.ver.indexOf('Windows') != -1);

//Look for Gecko
	this.gecko = (this.ua.indexOf('Gecko') > 1);
	if (this.gecko){
		this.geckoVer = parseInt(this.ua.substring(this.ua.indexOf('Gecko')+6, this.ua.length));
//		if (this.geckoVer < 20020000){this.min = false;}
	}
	
//Look for Firebird
	this.firebird = (this.ua.indexOf('Firebird') > 1);
	
//Look for Safari
	this.safari = (this.ua.indexOf('Safari') > 1);
	if (this.safari){
		this.gecko = false;
	}
	
//Look for IE
	this.ie = (this.ua.indexOf('MSIE') > 0);
	if (this.ie){
		this.ieVer = parseFloat(this.ua.substring(this.ua.indexOf('MSIE')+5, this.ua.length));
		if (this.ieVer < 5.5){this.min = false;}
	}
	
//Look for Opera
	this.opera = (this.ua.indexOf('Opera') > 0);
	if (this.opera){
		this.operaVer = parseFloat(this.ua.substring(this.ua.indexOf('Opera')+6, this.ua.length));
		if (this.operaVer < 7.04){this.min = false;}
	}
	if (this.min == false){
//		alert('Your browser may not be able to handle this page.');
	}
	
//Special case for the horrible ie5mac
	this.ie5mac = (this.ie&&this.mac&&(this.ieVer<6));
}

var C = new Client();

//for (prop in C){
//	alert(prop + ': ' + C[prop]);
//}



//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

//[strNavBarJS]
function NavBtnOver(Btn){
	if (Btn.className != 'NavButtonDown'){Btn.className = 'NavButtonUp';}
}

function NavBtnOut(Btn){
	Btn.className = 'NavButton';
}

function NavBtnDown(Btn){
	Btn.className = 'NavButtonDown';
}
//[/strNavBarJS]

function FuncBtnOver(Btn){
	if (Btn.className != 'FuncButtonDown'){Btn.className = 'FuncButtonUp';}
}

function FuncBtnOut(Btn){
	Btn.className = 'FuncButton';
}

function FuncBtnDown(Btn){
	Btn.className = 'FuncButtonDown';
}

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
				//get Mac FireFox to manipulate display, to force screen redraw
				if (C.mac && C.gecko) {Els[i].style.display = '';}
			}
			else{
				Els[i].style.visibility = 'hidden';
				if (C.mac && C.gecko) {Els[i].style.display = 'none';}
			}
		} 
		else {
			// tagName is either input or select (that is, Form Elements)
			// ie6 has a problem with Form elements, so manipulate those
			if (C.ie) {
				if (C.ieVer < 7) {
					if (Show == true){
						Els[i].style.visibility = 'visible';
					}
					else{
						Els[i].style.visibility = 'hidden';
					}
				}
			}
		}
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
	if (Finished == true){
		Finish();
	}
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].clientWidth;
	this.H = document.getElementsByTagName('body')[0].clientHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	if (C.ie) {
		thisKey = window.event.keyCode;
	}
	else {
		thisKey = e.keyCode;
	}

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
	}

	if (Suppress == true){
		if (C.ie){
			window.event.returnValue = false;	
			window.event.cancelBubble = true;
		}
		else{
			e.preventDefault();
		}
	}
}

if (C.ie){
	document.attachEvent('onkeydown',SuppressBackspace);
	window.attachEvent('onkeydown',SuppressBackspace);
}
else{
	if (window.addEventListener){
		window.addEventListener('keypress',SuppressBackspace,false);
	}
}

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

}




function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}

//EXTENSION TO ARRAY OBJECT
function Array_IndexOf(Input){
	var Result = -1;
	for (var i=0; i<this.length; i++){
		if (this[i] == Input){
			Result = i;
		}
	}
	return Result;
}
Array.prototype.indexOf = Array_IndexOf;

//IE HAS RENDERING BUG WITH BOTTOM NAVBAR
function RemoveBottomNavBarForIE(){
	if ((C.ie)&&(document.getElementById('Reading') != null)){
		if (document.getElementById('BottomNavBar') != null){
			document.getElementById('TheBody').removeChild(document.getElementById('BottomNavBar'));
		}
	}
}




//  \u002A (*) removed from Punc list, <br />  added

var Punc = ' \u0021 \u0022 \u0023 \u0025 \u0026 \u0027 \u0028 \u0029 \u002C \u002D \u002E \u002F \u003A \u003B \u003F \u0040 \u005B \u005C \u005D \u007B \u007D \u00A1 \u00AB \u00AD \u00B7 \u00BB \u00BF \u037E \u0387 \u055A \u055B \u055C \u055D \u055E \u055F \u0589 \u058A \u05BE \u05C0 \u05C3 \u05F3 \u05F4 \u060C \u061B \u061F \u066A \u066B \u066C \u066D \u06D4 \u0700 \u0701 \u0702 \u0703 \u0704 \u0705 \u0706 \u0707 \u0708 \u0709 \u070A \u070B \u070C \u070D \u0964 \u0965 \u0970 \u0DF4 \u0E4F \u0E5A \u0E5B \u0F04 \u0F05 \u0F06 \u0F07 \u0F08 \u0F09 \u0F0A \u0F0B \u0F0C \u0F0D \u0F0E \u0F0F \u0F10 \u0F11 \u0F12 \u0F3A \u0F3B \u0F3C \u0F3D \u0F85 \u104A \u104B \u104C \u104D \u104E \u104F \u10FB \u1361 \u1362 \u1363 \u1364 \u1365 \u1366 \u1367 \u1368 \u166D \u166E \u169B \u169C \u16EB \u16EC \u16ED \u17D4 \u17D5 \u17D6 \u17D7 \u17D8 \u17D9 \u17DA \u17DC \u1800 \u1801 \u1802 \u1803 \u1804 \u1805 \u1806 \u1807 \u1808 \u1809 \u180A \u2010 \u2011 \u2012 \u2013 \u2014 \u2015 \u2016 \u2017 \u2018 \u2019 \u201A \u201B \u201C \u201D \u201E \u201F \u2020 \u2021 \u2022 \u2023 \u2024 \u2025 \u2026 \u2027 \u2030 \u2031 \u2032 \u2033 \u2034 \u2035 \u2036 \u2037 \u2038 \u2039 \u203A \u203B \u203C \u203D \u203E \u2041 \u2042 \u2043 \u2045 \u2046 \u2048 \u2049 \u204A \u204B \u204C \u204D \u207D \u207E \u208D \u208E \u2329 \u232A \u3001 \u3002 \u3003 \u3008 \u3009 \u300A \u300B \u300C \u300D \u300E \u300F \u3010 \u3011 \u3014 \u3015 \u3016 \u3017 \u3018 \u3019 \u301A \u301B \u301C \u301D \u301E \u301F \u3030 \uFD3E \uFD3F \uFE30 \uFE31 \uFE32 \uFE35 \uFE36 \uFE37 \uFE38 \uFE39 \uFE3A \uFE3B \uFE3C \uFE3D \uFE3E \uFE3F \uFE40 \uFE41 \uFE42 \uFE43 \uFE44 \uFE49 \uFE4A \uFE4B \uFE4C \uFE50 \uFE51 \uFE52 \uFE54 \uFE55 \uFE56 \uFE57 \uFE58 \uFE59 \uFE5A \uFE5B \uFE5C \uFE5D \uFE5E \uFE5F \uFE60 \uFE61 \uFE63 \uFE68 \uFE6A \uFE6B \uFF01 \uFF02 \uFF03 \uFF05 \uFF06 \uFF07 \uFF08 \uFF09 \uFF0A \uFF0C \uFF0D \uFF0E \uFF0F \uFF1A \uFF1B \uFF1F \uFF20 \uFF3B \uFF3C \uFF3D \uFF5B \uFF5D \uFF61 \uFF62 \uFF63 \uFF64 <br /> ';

var TriedWords = '';
var Correct = 0;
var TotalWords = 0;
var strFinished = 'Terminou!';
var AllDone = false;
var Finished = false;
var TimeOver = false;
var DoneList = new Array();
var Words = new Array();
var BlankWords = new Array();
var FreeWords = new Array();
var Detail = 'Wrong guesses: ';
var StartTime = (new Date()).getTime();
var YourScoreIs = 'Sua pontua&#x00E7;&#x00E3;o &#x00E9;: ';
var strTimesUp = 'Your time is over!';

var FinalScore = 0;

function StartUp(){

//[Startup code for getting student id]

	TotalWords = Words.length;

	var x = 0;
	var y = 0;
	var Temp = '';

	for (x=0; x<Words.length; x++){
		DoneList[x] = 1;
		if (Words[x] == 'xxxNewParaxxx'){
			BlankWords[x] = '<br />';
			Words[x] = '<br />';
			TotalWords--;
			DoneList[x] = 0;
		}
		else{
			if (Punc.indexOf(Words[x]) > -1) {
				BlankWords[x] = Words[x];
				TotalWords--;
				DoneList[x] = 0;
			}
			else {
				Temp = '';
				for (y=0; y<Words[x].length; y++) {
					if (Words[x].charAt(y) == '\''){
						Temp += '\'';
					}
					else{
						Temp += '*';
					}
				}
			BlankWords[x] = Temp;
			}
		}
	}

	if (FreeWords.length > 0){
		for (x=0; x<FreeWords.length; x++){
			for (y=0; y<Words.length; y++){
				if (FreeWords[x].toUpperCase() == Words[y].toUpperCase()){
					BlankWords[y] = Words[y];
					DoneList[y] = 0;
					TotalWords--;
				}
			}
		}
	}

	WriteText();
	document.getElementById('Guess').value = '';
	document.getElementById('Guess').focus();


}

function WriteText() {

	var Output = '';
	var x = 0;
	var LastOne = 'Punc';

	for (x=0; x<BlankWords.length; x++) {
		if ((Punc.indexOf(BlankWords[x]) == -1) && (LastOne != 'Punc')) {
			Output += ' ';
		}

		Output += BlankWords[x];

		if (Punc.indexOf(BlankWords[x]) > -1) {
			LastOne = 'Punc';
		}

		else {
			LastOne = 'NotPunc';
		}
	}
	document.getElementById('Stars').innerHTML = Output;
}

function CheckGuess(){
	var Input = TrimString(document.getElementById('Guess').value);
	if (Input.length < 1){return;};
	if (Input.indexOf(' ') < 0){
		CheckWord(Input);
	}
	else{
		var InputWords = Input.split(' ');
		for (var i=0; i<InputWords.length; i++){
			CheckWord(InputWords[i]);
		}
	}
}

function CheckWord(InputWord) {

	if (AllDone == true){
		return;
	}

	if (InputWord.length == 0) {
		return;
	}

	var x = 0;
	var FoundOne = 0;

	for (x=0; x<Words.length; x++) {
		if (InputWord.toUpperCase() == Words[x].toUpperCase()) {

			FoundOne = -1;
			if (BlankWords[x] != Words[x]){
				Correct++;
			}
			BlankWords[x] = Words[x];
			DoneList[x] = 0;
		}
	}

	if (FoundOne == -1) {
		WriteText();
	}

	else {
		document.getElementById('UsedBoxLabel').innerHTML = 'Palavras incorretas:';
		document.getElementById('UsedBox').innerHTML += InputWord + '<br />';
		Detail += InputWord + ' ';
		Correct--;
	}

	document.getElementById('ScoreBox').innerHTML = Correct + '/' + TotalWords;

	document.getElementById('Guess').value = '';
	CheckFinished();
	if (AllDone == false){	
		document.getElementById('Guess').focus();
	}
}

function Hint(){

	if (AllDone == true){
		return;
	}
	
	var x = 0;
	var y = 0;

//find the first unrevealed word

	while ((Words[x] == BlankWords[x]) && (x < Words.length - 1)) {
		x = x + 1;
	}

//find the first incorrect letter

	while ((Words[x].charAt(y) == BlankWords[x].charAt(y)) && (y < Words[x].length - 1)) {
		y = y + 1;
	}

	BlankWords[x] = Words[x].substring(0, y+1) + BlankWords[x].substring(y+1, BlankWords[x].length);


	if (BlankWords[x] == Words[x]){
		DoneList[x] = 0;
	}

	WriteText();

	Correct--;

	document.getElementById('ScoreBox').innerHTML = Correct + '/' + TotalWords;
	CheckFinished();
	document.getElementById('Guess').focus();
}

function CheckFinished(){
	var Done = true;
	for (var x=0; x<DoneList.length; x++){
		if (DoneList[x] == 1){
			Done = false;
		}
	}
	if (Done == true){
		FinalScore = Math.floor((100 * Correct)/TotalWords);
		document.getElementById('ScoreBox').innerHTML = FinalScore + '%';
		ShowMessage(strFinished + '<br />' + YourScoreIs + ' ' + FinalScore + '%');
		AllDone = true;

		Finish();
	}
}

function Finish(){
//If there's a form, fill it out and submit it
	var F = document.getElementById('store');
	if (F != null){
		F.starttime.value = StartTime;
		F.endtime.value = (new Date()).getTime();
		F.mark.value = FinalScore;
		F.detail.value = Detail;
		F.submit();
	}
}

function Solution(){
//Save current score
	for (var i=0; i<Words.length; i++){
		BlankWords[i] = Words[i];
		DoneList[i] = 0;
	}
	WriteText();
	CheckFinished();
}





Words[0] = '\u0054\u0068\u0069\u0073';
Words[1] = '\u0077\u006F\u006D\u0061\u006E';
Words[2] = '\u0069\u0073';
Words[3] = '\u0061';
Words[4] = '\u0074\u0065\u0061\u0063\u0068\u0065\u0072';
Words[5] = '\u002E\u0020';
Words[6] = '\u0078\u0078\u0078\u004E\u0065\u0077\u0050\u0061\u0072\u0061\u0078\u0078\u0078';
Words[7] = '\u0053\u0068\u0065';
Words[8] = '\u0069\u0073';
Words[9] = '\u0074\u0061\u006C\u006C';
Words[10] = '\u002E\u0020';
Words[11] = '\u0078\u0078\u0078\u004E\u0065\u0077\u0050\u0061\u0072\u0061\u0078\u0078\u0078';
Words[12] = '\u0053\u0068\u0065';
Words[13] = '\u0069\u0073';
Words[14] = '\u006E\u006F\u0074';
Words[15] = '\u0073\u0068\u006F\u0072\u0074';
Words[16] = '\u002E\u0020';
Words[17] = '\u0078\u0078\u0078\u004E\u0065\u0077\u0050\u0061\u0072\u0061\u0078\u0078\u0078';
Words[18] = '\u0054\u0068\u0069\u0073';
Words[19] = '\u006D\u0061\u006E';
Words[20] = '\u0069\u0073';
Words[21] = '\u006E\u006F\u0074';
Words[22] = '\u0061';
Words[23] = '\u0074\u0065\u0061\u0063\u0068\u0065\u0072';
Words[24] = '\u002E\u0020';
Words[25] = '\u0078\u0078\u0078\u004E\u0065\u0077\u0050\u0061\u0072\u0061\u0078\u0078\u0078';
Words[26] = '\u0048\u0065';
Words[27] = '\u0069\u0073';
Words[28] = '\u0061\u006E';
Words[29] = '\u0065\u006E\u0067\u0069\u006E\u0065\u0065\u0072';
Words[30] = '\u002E\u0020';
Words[31] = '\u0078\u0078\u0078\u004E\u0065\u0077\u0050\u0061\u0072\u0061\u0078\u0078\u0078';
Words[32] = '\u0048\u0065';
Words[33] = '\u0069\u0073';
Words[34] = '\u0073\u0068\u006F\u0072\u0074';
Words[35] = '\u002E\u0020';
Words[36] = '\u0078\u0078\u0078\u004E\u0065\u0077\u0050\u0061\u0072\u0061\u0078\u0078\u0078';









//-->

//]]>

</script>

</head>

<body onload="StartUp()">

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location=''; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location=''; return false;">=&gt;</button>


</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">Digite o que voc&#x00EA; escutar. Ou&#x00E7;a quantas vezes forem necess&#x00E1;rias.</h2>



</div>



<!-- [Student login info] -->

<div class="StdDiv">

<table border="0" cellpadding="8" style="margin-left: auto; margin-right: auto;"><tr>

<td style="text-align: center; vertical-align: top;">

<form id="Rhubarb" action="" onsubmit="CheckGuess(); return false">
<div style="margin-top: 10px;">
<label for="Guess">Guess/Chute</label>
<input type="text" id="Guess" size="15" onfocus="InTextBox=true;" onblur="InTextBox=false;"></input>

<br />

<button id="CheckButton"  class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="CheckGuess(); return false;">Check</button>


<button id="HintButton"  class="FuncButton" onmouseover="FuncBtnOver(this)" onfocus="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onblur="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="Hint(); return false;">Hint/Dica</button>








</div>
</form>

<span class="Label">Sua pontua&#x00E7;&#x00E3;o &#x00E9;: </span> <span id="ScoreBox">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>


<br /><br />

<span class="Label" id="UsedBoxLabel"></span><br />
<span id="UsedBox"></span>

</td>

<td style="text-align: center; vertical-align: top;">

<div class="Story" id="Stars">
Preparando exerc&#x00ED;cio...
</div>

</td>

</tr></table>

</div>

<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onfocus="FuncBtnOver(this)" onblur="FuncBtnOut(this)" onmouseover="FuncBtnOver(this)" onmouseout="FuncBtnOut(this)" onmousedown="FuncBtnDown(this)" onmouseup="FuncBtnOut(this)" onclick="HideFeedback(); return false;">&nbsp;OK&nbsp;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)"  onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location=''; return false;"> Index </button>



<button class="NavButton" onfocus="NavBtnOver(this)" onblur="NavBtnOut(this)" onmouseover="NavBtnOver(this)" onmouseout="NavBtnOut(this)" onmousedown="NavBtnDown(this)" onmouseup="NavBtnOut(this)" onclick="location=''; return false;">=&gt;</button>


</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>
</html>